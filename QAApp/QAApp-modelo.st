Object subclass: #Publicacion	instanceVariableNames: 'contenido fechaHora valoraciones'	classVariableNames: ''	package: 'QAApp-modelo'!!Publicacion methodsFor: 'initialization' stamp: 'Anonymous 4/13/2021 00:07'!initialize	contenido:= ''.	valoraciones := PluggableSet new		hashBlock: [ :valoracion | valoracion nomUsuario hash ];		equalBlock: [ :val1 :val2 | val1 nomUsuario = val2 nomUsuario ].	fechaHora := DateAndTime now! !!Publicacion methodsFor: 'initialization' stamp: 'Anonymous 4/13/2021 00:00'!inicializarConContenido: unContenidoself initialize.	contenido := unContenido.! !!Publicacion methodsFor: 'accesing' stamp: 'Anonymous 4/8/2021 02:27'!contenido^contenido! !!Publicacion methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 22:01'!valoraciones^valoraciones! !!Publicacion methodsFor: 'accesing' stamp: 'Anonymous 4/14/2021 12:26'!valorarConUsuario: unUsuario valor: unValor	(self fueValoradaPor: unUsuario)		ifNotNil: [ :v | 			v valor = unValor				ifTrue: [ valoraciones remove: v ]				ifFalse: [ v valor: unValor ] ]		ifNil: [ valoraciones add: (Valoracion valor: unValor usuario: unUsuario) ]! !!Publicacion methodsFor: 'accesing' stamp: 'Anonymous 4/14/2021 12:26'!fueValoradaPor: unUsuario	^ valoraciones detect: [ :v | v nomUsuario = unUsuario nombre ] ifNone: [ nil ] ! !!Publicacion methodsFor: 'accesing' stamp: 'Anonymous 4/12/2021 17:17'!contenido: unContenido	contenido := unContenido.! !!Publicacion methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 22:29'!cantidadValoracionesPositivas	^ self valoracionesPositivas size! !!Publicacion methodsFor: 'accesing' stamp: 'Anonymous 4/7/2021 09:57'!diferenciaDeValoraciones	^ self cantidadValoracionesPositivas		- self cantidadValoracionesNegativas! !!Publicacion methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 22:04'!valoracionesNegativas	^ valoraciones reject: [ :v | v valor ]! !!Publicacion methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 22:03'!valoracionesPositivas	^ valoraciones select: [ :v | v valor ]! !!Publicacion methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 22:29'!cantidadValoracionesNegativas	^ self valoracionesNegativas size! !!Publicacion methodsFor: 'accesing' stamp: 'Anonymous 4/8/2021 02:26'!fechaHora^fechaHora! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Publicacion class	instanceVariableNames: ''!!Publicacion class methodsFor: 'acccessing' stamp: 'Anonymous 4/7/2021 09:42'!puntaje	self subclassResponsibility! !Publicacion subclass: #Pregunta	instanceVariableNames: 'titulo respuestas topicos'	classVariableNames: ''	package: 'QAApp-modelo'!!Pregunta methodsFor: 'initialization' stamp: 'Anonymous 4/13/2021 00:03'!inicializarConTitulo: unTitulo contenido: unContenido topicos: unosTopicos	self inicializarConContenido: unContenido.	titulo := unTitulo.	topicos := unosTopicos.! !!Pregunta methodsFor: 'initialization' stamp: 'Anonymous 4/13/2021 00:17'!initialize	super initialize.	titulo := ''.	topicos := OrderedCollection new.	respuestas := SortedCollection new		sortBlock:			[ :p1 :p2 | p1 diferenciaDeValoraciones > p2 diferenciaDeValoraciones ]! !!Pregunta methodsFor: 'deleting' stamp: 'Anonymous 4/14/2021 20:16'!eliminarRespuestas	respuestas := SortedCollection new		sortBlock:			[ :p1 :p2 | p1 diferenciaDeValoraciones > p2 diferenciaDeValoraciones ]! !!Pregunta methodsFor: 'accesing' stamp: 'Anonymous 4/12/2021 17:18'!titulo: unTitulo	titulo:= unTitulo! !!Pregunta methodsFor: 'accesing' stamp: 'Anonymous 4/7/2021 09:25'!respuestas	^respuestas! !!Pregunta methodsFor: 'accesing' stamp: 'Anonymous 4/8/2021 02:28'!titulo^titulo! !!Pregunta methodsFor: 'accesing' stamp: 'Anonymous 4/11/2021 23:57'!agregarRespuesta: unaRespuesta 	respuestas add: unaRespuesta ! !!Pregunta methodsFor: 'accesing' stamp: 'Anonymous 4/8/2021 02:24'!tieneTopico: unTopico	^topicos includes: unTopico! !!Pregunta methodsFor: 'accesing' stamp: 'Anonymous 4/7/2021 09:29'!topicos	^topicos! !!Pregunta methodsFor: 'accesing' stamp: 'Anonymous 4/12/2021 19:27'!agregarTodosLosTopicos: listaDeTopicos	topicos addAll: listaDeTopicos! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pregunta class	instanceVariableNames: ''!!Pregunta class methodsFor: 'initialization' stamp: 'Anonymous 4/8/2021 02:19'!titulo: unTitulo contenido: unContenido topicos: unosTopicos	^ self new		inicializarConTitulo: unTitulo			contenido: unContenido			topicos: unosTopicos;		yourself! !!Pregunta class methodsFor: 'accesing' stamp: 'Anonymous 4/7/2021 09:45'!puntaje	^20! !Object subclass: #QAApp	instanceVariableNames: 'usuarios topicos preguntas nombre'	classVariableNames: ''	package: 'QAApp-modelo'!!QAApp methodsFor: 'deleting' stamp: 'Anonymous 4/15/2021 10:46'!eliminarPregunta: unaPregunta	| respuestas |	"eliminar:		1- las respuestas de la lista de respuestas de los usuarios que las crearon, para eso:			1- obtengo las resp de la preg			2- por cada una obtengo el usuario que la creo			3- le digo al autor que la elimine		2- la pregunta de la lista de preguntas del usuario que la creo		3- las respuestas de la lista de respuestas de la pregunta		4- la pregunta de la lista de cuora"	respuestas := unaPregunta respuestas.	respuestas		do: [ :r | 			(usuarios detect: [ :u | u esAutorDeRespuesta: r ])				eliminarRespuesta: r ].	(usuarios detect: [ :u | u esAutorDePregunta: unaPregunta ])		eliminarPregunta: unaPregunta.	unaPregunta eliminarRespuestas.	preguntas remove: unaPregunta! !!QAApp methodsFor: 'processing' stamp: 'Anonymous 4/15/2021 10:16'!preguntasRelevantesParaUsuario: unUsuario	| preguntasRelevantesSet preguntasRelevantes |	preguntasRelevantesSet := Set withAll: (self preguntasRelevantesDeTopicosParaUsuario: unUsuario).	preguntasRelevantesSet		addAll: unUsuario preguntasRelevantesDeSeguidos.	preguntasRelevantes := SortedCollection		sortBlock: [ :p1 :p2 | p1 fechaHora > p2 fechaHora ].	preguntasRelevantes addAll: preguntasRelevantesSet.	^ preguntasRelevantes! !!QAApp methodsFor: 'processing' stamp: 'Anonymous 4/8/2021 02:05'!preguntasRelevantesDeTopicosParaUsuario: unUsuario	^((unUsuario topicosDeInteres) flatCollect: [ :t | self preguntaDeTopico: t ]) asSet! !!QAApp methodsFor: 'processing' stamp: 'Anonymous 4/13/2021 09:53'!obtenerTopicosDeTexto: unTexto	^ ((unTexto splitOn: ',') collect: [ :t | t trimBoth ])		collect: [ :nombre | Topico nombre: nombre descripcion: '' ]! !!QAApp methodsFor: 'accesing' stamp: 'Anonymous 12/30/2023 22:00'!nombre	^ nombre.! !!QAApp methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 18:29'!buscarUsuarioPorNombre: unNombre	^usuarios detect: [ :usuario | usuario nombre = unNombre ] ifNone: [ ^nil ]! !!QAApp methodsFor: 'accesing' stamp: 'Anonymous 4/2/2021 12:46'!topicos	^topicos! !!QAApp methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 18:04'!usuarios	^usuarios! !!QAApp methodsFor: 'accesing' stamp: 'Anonymous 4/12/2021 19:23'!buscarTopicoPorNombre: unNombre	^ topicos		detect: [ :topico | topico nombre asLowercase  = unNombre asLowercase ]		ifNone: [ ^ nil ]! !!QAApp methodsFor: 'accesing' stamp: 'Anonymous 4/10/2021 17:13'!iniciarSesionConNombre: unNombre contrasenia: unaContrasenia	| u |	u := self buscarUsuarioPorNombre: unNombre.	u ifNil: [ ^nil ] ifNotNil: [ (u contrasenia = unaContrasenia) ifTrue: [ ^u ] ifFalse: [ ^nil ] ]! !!QAApp methodsFor: 'accesing' stamp: 'Anonymous 4/12/2021 23:44'!filtrarTopicoExistente: unTopico	^ (self buscarTopicoPorNombre: unTopico nombre)		ifNotNil: [ :t | t ]		ifNil: [ topicos add: unTopico.			unTopico ]! !!QAApp methodsFor: 'accesing' stamp: 'Anonymous 4/11/2021 10:32'!autorDeRespuesta: unaRespuesta	^ usuarios detect: [ :u | u esAutorDeRespuesta: unaRespuesta]! !!QAApp methodsFor: 'accesing' stamp: 'Anonymous 4/11/2021 02:10'!autorDePregunta: unaPregunta	^ usuarios detect: [ :u | u esAutorDePregunta: unaPregunta ]! !!QAApp methodsFor: 'accesing' stamp: 'Anonymous 4/15/2021 09:47'!preguntaDeTopico: unTopico	^ preguntas select: [ :p | p tieneTopico: unTopico ]! !!QAApp methodsFor: 'accesing' stamp: 'Anonymous 12/26/2023 01:21'!buscarUsuariosPorNombre: cadena	^usuarios select: [ :usuario | usuario nombre includesSubstring: cadena ].! !!QAApp methodsFor: 'accesing' stamp: 'Anonymous 4/8/2021 00:02'!preguntas 	^preguntas ! !!QAApp methodsFor: 'creation' stamp: 'Anonymous 4/12/2021 00:28'!crearRespuesta: unaPregunta usuario: unUsuario contenido: unContenido	| respuesta |	respuesta := Respuesta contenido: unContenido.	unaPregunta agregarRespuesta: respuesta.	unUsuario agregarRespuesta: respuesta.	^ respuesta! !!QAApp methodsFor: 'creation' stamp: 'Anonymous 4/10/2021 14:00'!agregarUsuario: unUsuario	usuarios add: unUsuario! !!QAApp methodsFor: 'creation' stamp: 'Anonymous 4/13/2021 00:32'!agregarTopico: unTopico	topicos add: unTopico! !!QAApp methodsFor: 'creation' stamp: 'Anonymous 4/12/2021 17:58'!agregarRespuesta: unaRespuesta aPregunta: unaPregunta conUsuario: unUsuario	unaPregunta agregarRespuesta: unaRespuesta.	unUsuario agregarRespuesta: unaRespuesta.	^ unaRespuesta! !!QAApp methodsFor: 'creation' stamp: 'Anonymous 4/15/2021 15:47'!instanciacionPrueba	| pedro diego juan preg1 preg2 |	self class clearSoleInstance.	pedro := Usuario nombre: 'pedro@cuoora.com' contrasenia: ''.	self agregarUsuario: pedro.	diego := Usuario nombre: 'diego@cuoora.com' contrasenia: ''.	self agregarUsuario: diego.	juan := Usuario nombre: 'juan@cuoora.com' contrasenia: ''.	self agregarUsuario: juan.	juan seguir: diego.	pedro seguir: juan.	preg1 := self		crearPreguntaConTitulo: '¿Para qué sirve el método SetUp?'		descripcion: ''		usuario: pedro		topicosDesdeTexto: 'OO1, Test de unidad'.	self		crearRespuesta: preg1		usuario: diego		contenido:			'Sirve para instanciar los objetos que sonevaluados por el test en un único método y que se ejecutesiempre antes de cada test.'.	preg2 := self		crearPreguntaConTitulo: '¿Qué significa #messageNotUnderstood?'		descripcion: ''		usuario: diego		topicosDesdeTexto: 'OO1, Smalltalk'.	self		crearRespuesta: preg2		usuario: pedro		contenido:			'Significa que el objeto que recibió el mensajeno encontró ningún método para ejecutar en respuesta.'! !!QAApp methodsFor: 'creation' stamp: 'Anonymous 4/13/2021 09:57'!crearPreguntaConTitulo: unTitulo descripcion: unaDescripcion usuario: unUsuario topicosDesdeTexto: unTexto	| pregunta |	pregunta := Pregunta		titulo: unTitulo		contenido: unaDescripcion		topicos: ((self obtenerTopicosDeTexto: unTexto) collect: [ :t | self filtrarTopicoExistente: t ]).	preguntas add: pregunta.	unUsuario agregarPregunta: pregunta.	^ pregunta! !!QAApp methodsFor: 'creation' stamp: 'Anonymous 4/12/2021 20:05'!agregarPregunta: unaPregunta conUsuario: unUsuario	preguntas add: unaPregunta.	unUsuario agregarPregunta: unaPregunta.	^ unaPregunta! !!QAApp methodsFor: 'creation' stamp: 'Anonymous 4/15/2021 09:05'!crearTopicoConNombre: unNombre descripcion: unaDescripcion	| nuevo |	nuevo := self buscarTopicoPorNombre: unNombre.	nuevo		ifNil: [ topicos  add: (Topico nombre: unNombre descripcion: unaDescripcion).			^ true ]		ifNotNil: [ ^ false ]! !!QAApp methodsFor: 'creation' stamp: 'Anonymous 4/10/2021 13:59'!crearUsuarioConNombre: unNombre contrasenia: unaContrasenia	| nuevo |	nuevo := self buscarUsuarioPorNombre: unNombre.	nuevo		ifNil: [ self				agregarUsuario: (Usuario nombre: unNombre contrasenia: unaContrasenia).			^ true ]		ifNotNil: [ ^ false ]! !!QAApp methodsFor: 'initialization' stamp: 'Anonymous 12/30/2023 21:57'!initialize	usuarios := PluggableSet new		hashBlock: [ :usuario1 | usuario1 nombre hash ];		equalBlock: [ :usuario1 :usuario2 | usuario1 nombre = usuario2 nombre ];		yourself.	topicos := PluggableSet new		hashBlock: [ :topico1 | topico1 nombre hash ];		equalBlock:				[ :topico1 :topico2 | topico1 nombre asLowercase = topico2 nombre asLowercase ];		yourself.	preguntas := OrderedCollection new.	nombre := 'QAApp'.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!QAApp class	instanceVariableNames: 'soleInstance'!!QAApp class methodsFor: 'instance creation' stamp: 'Anonymous 4/5/2021 16:26'!clearSoleInstance	soleInstance := nil.! !!QAApp class methodsFor: 'instance creation' stamp: 'Anonymous 4/15/2021 11:54'!soleInstance	^ soleInstance		ifNil: [ soleInstance := self new instanciacionPrueba  ]! !Publicacion subclass: #Respuesta	instanceVariableNames: ''	classVariableNames: ''	package: 'QAApp-modelo'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Respuesta class	instanceVariableNames: ''!!Respuesta class methodsFor: 'initialization' stamp: 'Anonymous 4/8/2021 02:20'!contenido: unContenido	^ self new		inicializarConContenido: unContenido;		yourself! !!Respuesta class methodsFor: 'accesing' stamp: 'Anonymous 4/7/2021 09:45'!puntaje	^50! !Object subclass: #Topico	instanceVariableNames: 'nombre descripcion'	classVariableNames: ''	package: 'QAApp-modelo'!!Topico methodsFor: 'accesing' stamp: 'Anonymous 4/2/2021 11:50'!nombre	^nombre! !!Topico methodsFor: 'accesing' stamp: 'Anonymous 4/2/2021 11:50'!descripcion	^descripcion ! !!Topico methodsFor: 'initialization' stamp: 'Anonymous 4/13/2021 00:34'!initialize 	nombre:= ''.descripcion := ''! !!Topico methodsFor: 'initialization' stamp: 'Anonymous 4/8/2021 02:13'!inicializarConNombre: unNombre descripcion: unaDescripcion	nombre := unNombre.	descripcion := unaDescripcion! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Topico class	instanceVariableNames: ''!!Topico class methodsFor: 'initialization' stamp: 'Anonymous 4/3/2021 19:31'!nombre: unNombre descripcion: unaDescripcion	^ self new inicializarConNombre: unNombre descripcion: unaDescripcion; yourself ! !Object subclass: #Usuario	instanceVariableNames: 'topicosDeInteres siguiendo preguntas respuestas nombre contrasenia fechaHora'	classVariableNames: ''	package: 'QAApp-modelo'!!Usuario methodsFor: 'initialization' stamp: 'Anonymous 4/13/2021 00:34'!inicializarConNombre: unNombre contrasenia: unaContraseniaself initialize. 	nombre := unNombre.	contrasenia := unaContrasenia.	! !!Usuario methodsFor: 'initialization' stamp: 'Anonymous 4/13/2021 00:36'!initialize	fechaHora := DateAndTime now.	topicosDeInteres := OrderedCollection new.	siguiendo := OrderedCollection new.	preguntas := OrderedCollection new.	respuestas := OrderedCollection new! !!Usuario methodsFor: 'calculations' stamp: 'Anonymous 4/8/2021 01:42'!puntaje	^ self puntajePorPreguntas + self puntajePorRespuestas! !!Usuario methodsFor: 'calculations' stamp: 'Anonymous 4/8/2021 01:42'!puntajePorPreguntas	^ (preguntas size * Pregunta puntaje) + (preguntas sumNumbers: [ :p | p diferenciaDeValoraciones ])! !!Usuario methodsFor: 'calculations' stamp: 'Anonymous 4/14/2021 11:51'!puntajePorRespuestas	^ (respuestas) size		* Respuesta puntaje		+ (respuestas sumNumbers: [ :p | p diferenciaDeValoraciones ])! !!Usuario methodsFor: 'adding' stamp: 'Anonymous 4/8/2021 01:51'!agregarRespuesta: unaRespuesta	respuestas add: unaRespuesta! !!Usuario methodsFor: 'adding' stamp: 'Anonymous 4/12/2021 15:48'!seguir: otroUsuario	(self sigueA: otroUsuario)		ifTrue: [ siguiendo remove: otroUsuario ]		ifFalse: [ siguiendo add: otroUsuario ]! !!Usuario methodsFor: 'adding' stamp: 'Anonymous 4/8/2021 01:45'!agregarTopicoDeInteres: unTopico	topicosDeInteres add: unTopico! !!Usuario methodsFor: 'adding' stamp: 'Anonymous 4/8/2021 01:46'!agregarPregunta: unaPregunta	preguntas add: unaPregunta ! !!Usuario methodsFor: 'adding' stamp: 'Anonymous 4/12/2021 15:47'!sigueA: otroUsuario 	^siguiendo includes: otroUsuario ! !!Usuario methodsFor: 'accesing' stamp: 'Anonymous 4/7/2021 09:39'!respuestas	^ respuestas! !!Usuario methodsFor: 'accesing' stamp: 'Anonymous 4/10/2021 18:58'!preguntasRelevantesDeSeguidos	^ siguiendo flatCollect: [ :u | u preguntas ]! !!Usuario methodsFor: 'accesing' stamp: 'Anonymous 4/8/2021 01:50'!esAutorDePregunta: unaPregunta^preguntas includes: unaPregunta ! !!Usuario methodsFor: 'accesing' stamp: 'Anonymous 4/8/2021 02:00'!topicosDeInteres	^topicosDeInteres ! !!Usuario methodsFor: 'accesing' stamp: 'Anonymous 4/8/2021 01:55'!esAutorDeRespuesta: unaRespuesta	^respuestas includes: unaRespuesta! !!Usuario methodsFor: 'accesing' stamp: 'Anonymous 4/7/2021 09:39'!preguntas	^preguntas! !!Usuario methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 18:19'!nombre	^nombre! !!Usuario methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 18:19'!contrasenia	^contrasenia! !!Usuario methodsFor: 'deleting' stamp: 'Anonymous 4/8/2021 01:54'!eliminarRespuesta: unaRespuesta	respuestas remove: unaRespuesta ! !!Usuario methodsFor: 'deleting' stamp: 'Anonymous 4/8/2021 01:49'!eliminarPregunta: unaPregunta	preguntas remove: unaPregunta ! !!Usuario methodsFor: 'deleting' stamp: 'Anonymous 4/7/2021 09:38'!dejarDeSeguir: otroUsuario	siguiendo remove: otroUsuario! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: ''!!Usuario class methodsFor: 'initialization' stamp: 'Anonymous 4/3/2021 19:27'!nombre: unNombre contrasenia: unaContrasenia	^ self new inicializarConNombre: unNombre contrasenia: unaContrasenia; yourself! !Object subclass: #Valoracion	instanceVariableNames: 'valor fechaHora usuario'	classVariableNames: ''	package: 'QAApp-modelo'!!Valoracion methodsFor: 'accesing' stamp: 'Anonymous 4/8/2021 02:25'!fechaHora	^fechaHora! !!Valoracion methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 19:33'!usuario	^usuario! !!Valoracion methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 21:59'!valor: unValor	valor := unValor! !!Valoracion methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 19:39'!nomUsuario	^usuario nombre! !!Valoracion methodsFor: 'accesing' stamp: 'Anonymous 4/3/2021 19:33'!valor	^valor! !!Valoracion methodsFor: 'initialization' stamp: 'Anonymous 4/13/2021 00:35'!initialize 	fechaHora := DateAndTime now! !!Valoracion methodsFor: 'initialization' stamp: 'Anonymous 4/13/2021 00:35'!inicializarConValor: unValor usuario: unUsuario	self initialize.	valor := unValor.	usuario := unUsuario.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Valoracion class	instanceVariableNames: ''!!Valoracion class methodsFor: 'initialization' stamp: 'Anonymous 4/3/2021 19:26'!valor: unValor usuario: unUsuario	^ self new inicializarConValor: unValor usuario: unUsuario; yourself.! !