TestCase subclass: #PreguntaTest	instanceVariableNames: 'unaPregunta resp1 resp2'	classVariableNames: ''	package: 'QAApp-tests'!!PreguntaTest methodsFor: 'tests - accessing' stamp: 'Anonymous 4/14/2021 20:15'!testEliminarRespuestas	unaPregunta agregarRespuesta: resp1.	self assert: (unaPregunta respuestas size) equals: 1.	unaPregunta eliminarRespuestas.	self assert: (unaPregunta respuestas size) equals: 0.	unaPregunta agregarRespuesta: resp2.	unaPregunta agregarRespuesta: resp1.	self assert: (unaPregunta respuestas size) equals: 2.	unaPregunta eliminarRespuestas.	self assert: (unaPregunta respuestas size) equals: 0! !!PreguntaTest methodsFor: 'running' stamp: 'Anonymous 4/14/2021 20:05'!setUp 	unaPregunta := Pregunta titulo: '¿Para qué sirve el método SetUp?' contenido: '¿Para qué sirve?' topicos: (OrderedCollection with: (Topico nombre: 'unTopico' descripcion: '' )).	resp1 := Respuesta contenido: 'unaRespuesta'.	resp2 := Respuesta contenido: 'otraRespuesta'.! !TestCase subclass: #PublicacionTest	instanceVariableNames: 'unaPublicacion usuario1 usuario2 usuario3'	classVariableNames: ''	package: 'QAApp-tests'!!PublicacionTest methodsFor: 'tests - accessing' stamp: 'Anonymous 4/14/2021 19:53'!testValorarConUsuarioValor	self assert: unaPublicacion valoraciones size equals: 0.	unaPublicacion valorarConUsuario: usuario1 valor: true.	self assert: unaPublicacion valoraciones size equals: 1.	unaPublicacion valorarConUsuario: usuario1 valor: true.	self assert: unaPublicacion valoraciones size equals: 0.	unaPublicacion valorarConUsuario: usuario2 valor: false.	self assert: unaPublicacion valoraciones size equals: 1.	unaPublicacion valorarConUsuario: usuario2 valor: false.	self assert: unaPublicacion valoraciones size equals: 0! !!PublicacionTest methodsFor: 'tests - accessing' stamp: 'Anonymous 4/14/2021 19:49'!testValoracionesNegativas	self assert: (unaPublicacion valoracionesNegativas  size) equals: 0.	unaPublicacion valorarConUsuario: usuario1 valor: false.	self assert: (unaPublicacion valoracionesNegativas  size) equals: 1.	unaPublicacion valorarConUsuario: usuario1 valor: false.	self assert: (unaPublicacion valoracionesNegativas  size) equals: 0.	unaPublicacion valorarConUsuario: usuario2 valor: true.	self assert: (unaPublicacion valoracionesNegativas size) equals: 0.! !!PublicacionTest methodsFor: 'tests - accessing' stamp: 'Anonymous 4/15/2021 08:27'!testFueValoradaPor	self assert: (unaPublicacion fueValoradaPor: usuario1) equals: nil.	unaPublicacion valorarConUsuario: usuario1 valor: true.	self		assert:			(unaPublicacion fueValoradaPor: usuario1) nomUsuario = usuario1 nombre		equals: true.	unaPublicacion valorarConUsuario: usuario1 valor: true.	self assert: (unaPublicacion fueValoradaPor: usuario1) equals: nil.	self assert: (unaPublicacion fueValoradaPor: usuario2) equals: nil.	unaPublicacion valorarConUsuario: usuario2 valor: false.	self		assert:			(unaPublicacion fueValoradaPor: usuario2) nomUsuario = usuario2 nombre		equals: true! !!PublicacionTest methodsFor: 'tests - accessing' stamp: 'Anonymous 4/14/2021 19:27'!testDiferenciaDeValoraciones	self assert: unaPublicacion diferenciaDeValoraciones equals: 0.	unaPublicacion		valorarConUsuario: usuario1		valor: true.	self assert: unaPublicacion diferenciaDeValoraciones equals: 1.	unaPublicacion		valorarConUsuario: usuario2		valor: false.	self assert: unaPublicacion diferenciaDeValoraciones equals: 0.	unaPublicacion		valorarConUsuario: usuario3		valor: false.	self assert: unaPublicacion diferenciaDeValoraciones equals: -1! !!PublicacionTest methodsFor: 'tests - accessing' stamp: 'Anonymous 4/14/2021 19:49'!testValoracionesPositivas	self assert: unaPublicacion valoracionesPositivas size equals: 0.	unaPublicacion valorarConUsuario: usuario1 valor: true.	self assert: unaPublicacion valoracionesPositivas size equals: 1.	unaPublicacion valorarConUsuario: usuario1 valor: true.	self assert: unaPublicacion valoracionesPositivas size equals: 0.	unaPublicacion valorarConUsuario: usuario2 valor: false.	self assert: unaPublicacion valoracionesPositivas size equals: 0! !!PublicacionTest methodsFor: 'running' stamp: 'Anonymous 4/14/2021 19:39'!setUp	unaPublicacion := Publicacion new.	usuario1 := Usuario nombre: 'juan@cuoora.com' contrasenia: ''.	usuario2 := Usuario nombre: 'diego@cuoora.com' contrasenia: ''.	usuario3 := Usuario nombre: 'pedro@cuoora.com' contrasenia: ''.! !TestCase subclass: #QAAppTest	instanceVariableNames: 'usuario1 usuario2 usuario3 preg1 preg2 resp1 resp2 topico1 topico2 qaapp'	classVariableNames: ''	package: 'QAApp-tests'!!QAAppTest methodsFor: 'running' stamp: 'Anonymous 4/15/2021 10:39'!setUpPreguntastopico1 := Topico nombre: 'OO1' descripcion: ''.	topico2 := Topico nombre: 'Smalltalk' descripcion: ''.	preg1 := Pregunta		titulo: 'titulo1'		contenido: 'contenido1'		topicos:			(OrderedCollection				with: topico1				with: topico2).	preg2 := Pregunta		titulo: 'titulo2'		contenido: 'contenido2'		topicos:			(OrderedCollection				with: topico2)! !!QAAppTest methodsFor: 'running' stamp: 'Anonymous 4/15/2021 08:34'!setUpRespuestas	resp1 := Respuesta contenido: 'contenido3'.	resp2 := Respuesta contenido: 'contenido4'! !!QAAppTest methodsFor: 'running' stamp: 'Anonymous 4/15/2021 08:34'!setUpUsuariosusuario1 := Usuario nombre: 'diego@cuoora.com' contrasenia: ''.	usuario2 := Usuario nombre: 'juan@cuoora.com' contrasenia: ''.	usuario3 := Usuario nombre: 'diego@cuoora.com' contrasenia: ''.! !!QAAppTest methodsFor: 'running' stamp: 'Anonymous 12/30/2023 21:53'!setUp	super setUp.	qaapp := QAApp new.	self setUpUsuarios.	self setUpPreguntas.	self setUpRespuestas.! !!QAAppTest methodsFor: 'tests - accessing' stamp: 'Anonymous 12/30/2023 21:53'!testFiltrarTopicoExistente	qaapp agregarTopico: topico1.	self		assert: (qaapp filtrarTopicoExistente: topico1) nombre = 'OO1'		equals: true.	self assert: (qaapp filtrarTopicoExistente: topico2)nombre = 'Smalltalk' equals: true.! !!QAAppTest methodsFor: 'tests - accessing' stamp: 'Anonymous 12/30/2023 21:53'!testAutorDeRespuesta	qaapp agregarUsuario: usuario1.	qaapp agregarPregunta: preg1 conUsuario: usuario1    .	qaapp agregarRespuesta: resp1 aPregunta: preg1 conUsuario: usuario1.	self assert: (qaapp autorDeRespuesta: resp1) equals: usuario1.	qaapp agregarUsuario: usuario2.	qaapp agregarPregunta: preg2 conUsuario: usuario2    .	qaapp agregarRespuesta: resp2 aPregunta: preg2 conUsuario: usuario2.	self assert: (qaapp autorDePregunta: preg2) equals: usuario2.! !!QAAppTest methodsFor: 'tests - accessing' stamp: 'Anonymous 12/30/2023 21:53'!testPreguntaDeTopico	qaapp agregarPregunta: preg1 conUsuario: usuario1.	qaapp agregarPregunta: preg2 conUsuario: usuario2 .	self assert: ((qaapp preguntaDeTopico: topico1) includes: preg1 )equals: true. 	self assert: ((qaapp preguntaDeTopico: topico1) includes: preg2 )equals: false.	self assert: ((qaapp preguntaDeTopico: topico2) includes: preg2 )equals: true.	self assert: ((qaapp preguntaDeTopico: topico2) includes: preg1 )equals: true.! !!QAAppTest methodsFor: 'tests - accessing' stamp: 'Anonymous 12/30/2023 21:53'!testIniciarSesionConNombreContrasenia	qaapp crearUsuarioConNombre: 'juan@cuoora.com' contrasenia: 'juan'.	self		assert:			(qaapp iniciarSesionConNombre: 'juan@cuoora.com' contrasenia: 'juan')				nombre = 'juan@cuoora.com'		equals: true.	self		assert:			(qaapp iniciarSesionConNombre: 'juan@cuoora.com' contrasenia: 'juan')				contrasenia = 'juan'		equals: true.		self		assert:			(qaapp iniciarSesionConNombre: 'juan@cuoora.com' contrasenia: '')		equals: nil! !!QAAppTest methodsFor: 'tests - accessing' stamp: 'Anonymous 12/30/2023 21:53'!testAutorDePregunta	qaapp agregarUsuario: usuario1.	qaapp agregarPregunta: preg1 conUsuario: usuario1.	self assert: (qaapp autorDePregunta: preg1) equals: usuario1.	qaapp agregarUsuario: usuario2.	qaapp agregarPregunta: preg2 conUsuario: usuario2.	self assert: (qaapp autorDePregunta: preg2) equals: usuario2.! !!QAAppTest methodsFor: 'tests - accessing' stamp: 'Anonymous 12/30/2023 21:53'!testBuscarTopicoPorNombre	qaapp crearTopicoConNombre: 'OO1' descripcion: ''.	self		assert: (qaapp buscarTopicoPorNombre: 'oo1') nombre = 'OO1'		equals: true.	qaapp crearTopicoConNombre: 'Smalltalk' descripcion: ''.	self		assert: (qaapp buscarTopicoPorNombre: 'Smalltalk') nombre = 'Smalltalk'		equals: true.	self		assert: (qaapp buscarTopicoPorNombre: 'Topico1')		equals: nil! !!QAAppTest methodsFor: 'tests - accessing' stamp: 'Anonymous 12/30/2023 21:53'!testBuscarUsuarioPorNombre	qaapp crearUsuarioConNombre: 'juan@cuoora.com' contrasenia: ''.	self		assert: (qaapp buscarUsuarioPorNombre: 'juan@cuoora.com') nombre = 'juan@cuoora.com'		equals: true.	qaapp crearUsuarioConNombre: 'pedro@cuoora.com' contrasenia: ''.	self		assert: (qaapp buscarUsuarioPorNombre: 'pedro@cuoora.com') nombre = 'pedro@cuoora.com'		equals: true.	self assert: (qaapp buscarUsuarioPorNombre: 'Usuario1') equals: nil! !!QAAppTest methodsFor: 'tests - deleting' stamp: 'Anonymous 12/30/2023 21:53'!testEliminarPregunta	qaapp agregarUsuario: usuario1 .	qaapp agregarUsuario: usuario2.	qaapp agregarPregunta: preg1 conUsuario: usuario1.	qaapp agregarRespuesta: resp1 aPregunta: preg1 conUsuario: usuario1.	qaapp agregarRespuesta: resp2 aPregunta: preg1 conUsuario: usuario2.	qaapp eliminarPregunta: preg1.	self assert: qaapp preguntas size equals: 0.	self assert: usuario1 preguntas size equals: 0.	self assert: usuario1 respuestas size equals: 0.	self assert: usuario2 respuestas size equals: 0! !!QAAppTest methodsFor: 'tests - creation' stamp: 'Anonymous 12/30/2023 21:53'!testCrearUsuarioConNombreContrasenia	self		assert: (qaapp crearUsuarioConNombre: 'Nombre1' contrasenia: '')		equals: true.	self		assert: (qaapp crearUsuarioConNombre: 'nomBRE1' contrasenia: 'contrasenia')		equals: true.	self		assert: (qaapp crearUsuarioConNombre: 'nombRE2' contrasenia: '')		equals: true.	self		assert: (qaapp crearUsuarioConNombre: 'Nombre2' contrasenia: '')		equals: true! !!QAAppTest methodsFor: 'tests - creation' stamp: 'Anonymous 12/30/2023 21:53'!testCrearPreguntaConTituloDescripcionUsuarioTopicosDesdeTexto	| preg3 preg4 |	preg3 := qaapp		crearPreguntaConTitulo: 'Titulo1'		descripcion: 'Descripcion1'		usuario: usuario1		topicosDesdeTexto: 'OO1, Smalltalk'.	self assert: (qaapp preguntas includes: preg3) equals: true.	preg4 := qaapp		crearPreguntaConTitulo: 'Titulo2'		descripcion: 'Descripcion2'		usuario: usuario1		topicosDesdeTexto: 'OO1, TestCase'.	self assert: (qaapp preguntas includes: preg4) equals: true! !!QAAppTest methodsFor: 'tests - creation' stamp: 'Anonymous 12/30/2023 21:53'!testAgregarRespuestaAPreguntaConUsuario	qaapp agregarRespuesta: resp1 aPregunta: preg1 conUsuario: usuario1.	self assert: (usuario1 esAutorDeRespuesta: resp1) equals: true.	qaapp agregarRespuesta: resp2 aPregunta: preg1 conUsuario: usuario2.	self assert: (usuario2 esAutorDeRespuesta: resp2) equals: true.! !!QAAppTest methodsFor: 'tests - creation' stamp: 'Anonymous 12/30/2023 21:53'!testAgregarUsuario	qaapp agregarUsuario: usuario1.	self assert: (qaapp usuarios size) equals: 1.	qaapp agregarUsuario: usuario2.		self assert: (qaapp usuarios size) equals: 2.	qaapp agregarUsuario: usuario3.	self assert: (qaapp usuarios size) equals: 2.! !!QAAppTest methodsFor: 'tests - creation' stamp: 'Anonymous 12/30/2023 21:53'!testCrearTopicoConNombreDescripcion	self		assert: (qaapp crearTopicoConNombre: 'Topico1' descripcion: '')		equals: true.	self		assert: (qaapp crearTopicoConNombre: 'topiCO1' descripcion: '')		equals: false.	self		assert: (qaapp crearTopicoConNombre: 'topICO2' descripcion: '')		equals: true.	self		assert: (qaapp crearTopicoConNombre: 'topico2' descripcion: '')		equals: false! !!QAAppTest methodsFor: 'tests - creation' stamp: 'Anonymous 12/30/2023 21:53'!testAgregarPreguntaConUsuario	qaapp agregarPregunta: preg1 conUsuario: usuario1 .	self assert: (qaapp preguntas includes: preg1) equals: true.	qaapp agregarPregunta: preg2 conUsuario:  usuario2.	self assert: (qaapp preguntas includes: preg2) equals: true.! !!QAAppTest methodsFor: 'tests - creation' stamp: 'Anonymous 12/30/2023 21:53'!testCrearRespuestaUsuarioContenido	| resp3 resp4 |	resp3 := qaapp		crearRespuesta: preg1		usuario: usuario1		contenido: 'Contenido1'.	self assert: (usuario1 respuestas includes: resp3) equals: true.	self assert: (preg1 respuestas includes: resp3) equals: true.	resp4 := qaapp		crearRespuesta: preg2		usuario: usuario1		contenido: 'Contenido2'.	self assert: (usuario1 respuestas includes: resp4) equals: true.	self assert: (preg2 respuestas includes: resp4) equals: true! !!QAAppTest methodsFor: 'tests - processing' stamp: 'Anonymous 12/30/2023 21:53'!testObtenerTopicosDeTexto	self		assert: (qaapp obtenerTopicosDeTexto: '  OO1 ,   Smalltalk   ') size		equals: 2.	self		assert: (qaapp obtenerTopicosDeTexto: '  OO1 ,   Smalltalk   ,a,a,b') size		equals: 5.! !!QAAppTest methodsFor: 'tests - processing' stamp: 'Anonymous 12/30/2023 21:53'!testPreguntasRelevantesParaUsuario	self inicializacionTestPreguntasRelevantes.	self		assert: (qaapp preguntasRelevantesParaUsuario: usuario1) size		equals: 2.	self		assert: ((qaapp preguntasRelevantesParaUsuario: usuario1) includes: preg1)		equals: true.	self		assert: ((qaapp preguntasRelevantesParaUsuario: usuario1) includes: preg2)		equals: true! !!QAAppTest methodsFor: 'tests - processing' stamp: 'Anonymous 12/30/2023 21:53'!testPreguntasRelevantesDeTopicosParaUsuario	self inicializacionTestPreguntasRelevantes.	self		assert: (qaapp preguntasRelevantesDeTopicosParaUsuario: usuario1) size		equals: 1.	self		assert:			((qaapp preguntasRelevantesDeTopicosParaUsuario: usuario1)				includes: preg1)		equals: true! !!QAAppTest methodsFor: 'tests - processing' stamp: 'Anonymous 12/30/2023 21:53'!inicializacionTestPreguntasRelevantes	usuario1 seguir: usuario2.	qaapp agregarUsuario: usuario1.	qaapp agregarTopico: topico1.	qaapp agregarTopico: topico2.	usuario1 agregarTopicoDeInteres: topico1.	qaapp agregarPregunta: preg1 conUsuario: usuario2.	qaapp agregarPregunta: preg2 conUsuario: usuario2! !TestCase subclass: #UsuarioTest	instanceVariableNames: 'unUsuario preg1 preg2 resp1 resp2 otroUsuario topico1 topico2'	classVariableNames: ''	package: 'QAApp-tests'!!UsuarioTest methodsFor: 'tests - accessing' stamp: 'Anonymous 4/14/2021 11:20'!testEsAutorDePregunta	self assert: (unUsuario esAutorDePregunta: preg1) equals: false.	unUsuario agregarPregunta: preg1.	self assert: (unUsuario esAutorDePregunta: preg1) equals: true.	self assert: (unUsuario esAutorDePregunta: preg2) equals: false.	unUsuario agregarPregunta: preg2.	self assert: (unUsuario esAutorDePregunta: preg2) equals: true.! !!UsuarioTest methodsFor: 'tests - accessing' stamp: 'Anonymous 4/14/2021 11:21'!testEsAutorDeRespuesta	self assert: (unUsuario esAutorDeRespuesta: resp1) equals: false.	unUsuario agregarRespuesta: resp1.	self assert: (unUsuario esAutorDeRespuesta: resp1) equals: true.	self assert: (unUsuario esAutorDeRespuesta: resp2) equals: false.	unUsuario agregarRespuesta: resp2.	self assert: (unUsuario esAutorDeRespuesta: resp2) equals: true! !!UsuarioTest methodsFor: 'tests - accessing' stamp: 'Anonymous 4/14/2021 11:24'!testPreguntasRelevantesDeSeguidos	otroUsuario agregarPregunta: preg1.	self assert: (unUsuario preguntasRelevantesDeSeguidos includes: preg1) equals: false.	unUsuario seguir: otroUsuario.	self assert: (unUsuario preguntasRelevantesDeSeguidos includes: preg1) equals: true.	self assert: (unUsuario preguntasRelevantesDeSeguidos includes: preg2) equals: false.	otroUsuario agregarPregunta: preg2.	self assert: (unUsuario preguntasRelevantesDeSeguidos includes: preg2) equals: true.! !!UsuarioTest methodsFor: 'tests - adding' stamp: 'Anonymous 4/14/2021 11:28'!testSeguir	self assert: (unUsuario sigueA: otroUsuario) equals: false.	unUsuario seguir: otroUsuario.	self assert: (unUsuario sigueA: otroUsuario) equals: true.	unUsuario seguir: otroUsuario.	self assert: (unUsuario sigueA: otroUsuario) equals: false.! !!UsuarioTest methodsFor: 'running' stamp: 'Anonymous 4/14/2021 11:35'!setUpValoraciones	preg1 valorarConUsuario: otroUsuario valor: true.	preg2 valorarConUsuario: otroUsuario valor: false.	preg2 valorarConUsuario: unUsuario valor: true.	resp1 valorarConUsuario: otroUsuario valor: true! !!UsuarioTest methodsFor: 'running' stamp: 'Anonymous 4/14/2021 11:34'!setUpPreguntas	preg1 := Pregunta		titulo: '¿Para qué sirve el método SetUp?'		contenido: '¿Para qué sirve?'		topicos: (OrderedCollection with: topico1 with: topico2).	preg2 := Pregunta		titulo: '¿Qué significa #messageNotUnderstood?'		contenido: '¿Qué significa?'		topicos: (OrderedCollection with: topico2).! !!UsuarioTest methodsFor: 'running' stamp: 'Anonymous 4/14/2021 11:36'!setUp	self setUpUsuarios.	self setUpTopicos.	self setUpRespuestas.	self setUpPreguntas.	self setUpValoraciones.! !!UsuarioTest methodsFor: 'running' stamp: 'Anonymous 4/14/2021 11:34'!setUpRespuestas	resp1 := Respuesta		contenido:			'Significa que el objeto que recibió el mensajeno encontró ningún método para ejecutar en respuesta.'.	resp2 := Respuesta contenido: 'Sirve para instanciar los objetos que sonevaluados por el test en un único método y que se ejecutesiempre antes de cada test.'.	! !!UsuarioTest methodsFor: 'running' stamp: 'Anonymous 4/14/2021 11:33'!setUpTopicos	topico1 := Topico		nombre: 'OO1'		descripcion: 'Orientacion a objetos 1'.	topico2 := Topico		nombre: 'Smalltalk'		descripcion: 'Lenguaje orientado a objetos'.! !!UsuarioTest methodsFor: 'running' stamp: 'Anonymous 4/14/2021 11:33'!setUpUsuarios	unUsuario := Usuario nombre: 'pedro@cuoora.com' contrasenia: ''.	otroUsuario := Usuario nombre: 'juan@cuoora.com' contrasenia: ''.! !!UsuarioTest methodsFor: 'tests - calculations' stamp: 'Anonymous 4/14/2021 11:57'!testPuntajePorPreguntas	self assert: (unUsuario puntajePorPreguntas) equals: 0.	unUsuario agregarPregunta: preg1.	self assert: unUsuario puntajePorPreguntas equals: 21.	unUsuario agregarPregunta: preg2.	self assert: unUsuario puntajePorPreguntas equals: 41! !!UsuarioTest methodsFor: 'tests - calculations' stamp: 'Anonymous 4/14/2021 12:03'!testPuntaje	self assert: unUsuario puntaje equals: 0.	unUsuario agregarPregunta: preg1.	self assert: unUsuario puntaje equals: 21.	unUsuario agregarPregunta: preg2.	self assert: unUsuario puntaje equals: 41.	unUsuario agregarRespuesta: resp1.	self assert: unUsuario puntaje equals: 92.	unUsuario agregarRespuesta: resp2.	self assert: unUsuario puntaje equals: 142.! !!UsuarioTest methodsFor: 'tests - calculations' stamp: 'Anonymous 4/14/2021 12:01'!testPuntajePorRespuestas	self assert: unUsuario puntajePorRespuestas equals: 0.	unUsuario agregarRespuesta: resp1.	self assert: unUsuario puntajePorRespuestas equals: 51.	unUsuario agregarRespuesta: resp2.	self assert: unUsuario puntajePorRespuestas equals: 101.! !